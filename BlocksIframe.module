<?php namespace ProcessWire;

class BlocksIframe extends WireData implements Module {

  public static function getModuleInfo() {
    return [
      'title' => 'Iframe Block',
      'summary' => 'Installs Template and Fields for a PageGrid Block',
      'author' => 'Jan Ploch',
      'icon' => 'file-code-o',
      'autoload' => 'template=admin',
      'requires' => array('PageGridBlocks'),
      'version' => '0.0.1.0'
    ];
  }

  public function getBlockName() {
    return array(
      'name' => 'pg_iframe',
      'label' => 'Iframe',
    );
  }

  //function to create block
  public function createBlock() {

    $b = $this->modules->get('PageGridBlocks');
    $blockName = $this->getBlockName()['name'];
    $blockLabel = $this->getBlockName()['label'];
    $blockIcon = $this->getModuleInfo()['icon'];

    $b->createTemplate($blockName, $blockLabel, $blockIcon);

    $f = $b->createField($blockName . '_url', 'FieldtypeText', $blockName);
    $f->label = 'Url';
    $f->description = 'If you use a vimeo/youtube url, the title and thumbnail will be loaded automatically and saved to the database. Users who access your site from the frontend will not load external resources until the play button is clicked (privacy friendly and DSGVO conform).';
    $f->save();

    $f = $b->createField($blockName . '_thumbnail', 'FieldtypeImage', $blockName);
    $f->label = 'Thumbnail';
    $f->description = 'Leave empty to auto generate image from youtube/vimeo urls';
    $f->extensions = 'gif jpg jpeg png';
    $f->maxFiles = 1;
    $f->outputFormat = 2;
    $f->save();

    $f = $b->createField($blockName . '_title', 'FieldtypeText', $blockName);
    $f->label = 'Title';
    $f->description = 'Leave empty to auto generate title from youtube/vimeo urls';
    $f->save();

    $f = $b->createField($blockName . '_ratio', 'FieldtypeOptions', $blockName);
    $f->label = 'Ratio';
    $f->inputfieldClass = 'InputfieldSelect';
    $f->save();
    $this->manager = new \ProcessWire\SelectableOptionManager();
    $options = '1:1|1:1 
    16:9|16:9
    4:3|4:3';
    $this->manager->setOptionsString($f, $options, true);
    $f->save();
    
  }

  public function ___upgrade($fromVersion, $toVersion) {
    $this->createBlock();
  }

  public function ___install() {
    $this->createBlock();
  }

  public function ___uninstall() {
    $blockName = $this->getBlockName()['name'];
    $this->modules->get('PageGridBlocks')->removeBlock($blockName);
  }
  
}