<?php namespace ProcessWire;

class BlocksPrevNext extends WireData implements Module {

  public static function getModuleInfo() {
    return [
      'title' => 'Previous/Next Page',
      'summary' => 'Installs Template and Fields for a PageGrid Block',
      'author' => 'Jan Ploch',
      'icon' => 'exchange',
      'autoload' => 'template=admin',
      'requires' => array('PageGridBlocks'),
      'version' => '0.0.1.3'
    ];
  }

  public function getBlockName() {
    return array(
      'name' => 'pg_prev_next',
      'label' => 'Previous/Next',
    );
  }

  //function to create block
  public function createBlock() {

    $b = $this->modules->get('PageGridBlocks');
    $blockName = $this->getBlockName()['name'];
    $blockLabel = $this->getBlockName()['label'];
    $blockIcon = $this->getModuleInfo()['icon'];
    
    $t = $b->createTemplate($blockName, $blockLabel, $blockIcon);

    $f = $b->createField($blockName . '_index', 'FieldtypePage', $blockName);
    $f->label = 'Index Page';
    $f->description = 'The index link will point to the parent page. Optionally you can set an alternative index page here.';
    $f->inputfield = 'InputfieldPageListSelect';
    $f->derefAsPage = 1;
    $f->parent_id = 1;
    $f->labelFieldName = 'title';
    $f->contentType = 1;
    $f->save();

    $f = $b->createField($blockName . '_indexlabel', 'FieldtypeText', $blockName);
    $f->label = 'Index Label';
    $f->placeholder = 'Index';
    $f->contentType = 1;
    $f->stripTags = 1;
    $f->textformatters = array(0 => 'TextformatterEntities');
    $f->save();

    $f = $b->createField($blockName . '_prevlabel', 'FieldtypeText', $blockName);
    $f->label = 'Previous Label';
    $f->placeholder = 'Page Title';
    $f->contentType = 1;
    $f->stripTags = 1;
    $f->textformatters = array(0 => 'TextformatterEntities');
    $f->save();

    $f = $b->createField($blockName . '_nextlabel', 'FieldtypeText', $blockName);
    $f->label = 'Next Label';
    $f->placeholder = 'Page Title';
    $f->contentType = 1;
    $f->stripTags = 1;
    $f->textformatters = array(0 => 'TextformatterEntities');
    $f->save();

  }

  public function ___upgrade($fromVersion, $toVersion) {
    $this->createBlock();
  }

  public function ___install() {
    $this->createBlock();
  }

  public function ___uninstall() {
    $blockName = $this->getBlockName()['name'];
    $this->modules->get('PageGridBlocks')->removeBlock($blockName);
  }
  
}