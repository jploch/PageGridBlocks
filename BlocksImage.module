<?php

namespace ProcessWire;

class BlocksImage extends WireData implements Module
{

  public static function getModuleInfo()
  {
    return [
      'title' => 'Image Block',
      'summary' => 'Installs Template and Fields for a PageGrid Block',
      'author' => 'Jan Ploch',
      'icon' => 'file-image-o',
      'autoload' => 'template=admin',
      'installs' => array('FileValidatorSvgSanitizer'),
      'requires' => array('PageGridBlocks'),
      'version' => 001
    ];
  }

  public function getBlockName()
  {
    return array(
      'name' => 'pg_image',
      'label' => 'Image',
    );
  }

  //function to create block
  public function createBlock()
  {
    $b = $this->modules->get('PageGridBlocks');
    $blockName = $this->getBlockName()['name'];
    $blockLabel = $this->getBlockName()['label'];
    $blockIcon = $this->getModuleInfo()['icon'];

    $b->createTemplate($blockName, $blockLabel, $blockIcon);

    $f = $b->createField($blockName, 'FieldtypeImage', $blockName);
    $f->label = $blockLabel;
    $f->extensions = 'gif jpg jpeg png svg';
    $f->maxFiles = 1;
    $f->outputFormat = 2;
    $f->save();

    $f = $b->createField($blockName . '_link', 'FieldtypePage', $blockName);
    $f->label = 'Link';
    $f->inputfield = 'InputfieldPageListSelect';
    $f->derefAsPage = 1;
    $f->parent_id = 1;
    $f->labelFieldName = 'title';
    $f->contentType = 1;
    $f->save();

    $f = $b->createField($blockName . '_link_external', 'FieldtypeText', $blockName);
    $f->label = 'Externer Link';
    $f->save();

  }

  public function ___upgrade($fromVersion, $toVersion)
  {
    $this->createBlock();
  }

  public function ___install()
  {
    //install module
    $this->modules->get('PageGridBlocks')->downloadModule('FileValidatorSvgSanitizer');
    $this->createBlock();
  }

  public function ___uninstall()
  {
    $blockName = $this->getBlockName()['name'];
    $this->modules->get('PageGridBlocks')->removeBlock($blockName);
  }
}
