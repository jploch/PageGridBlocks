<?php

namespace ProcessWire;

class BlocksEditor extends WireData implements Module {

  public static function getModuleInfo() {
    return [
      'title' => 'Rich Text Editor Block',
      'summary' => 'Installs Template and Fields for a PageGrid Block',
      'author' => 'Jan Ploch',
      'icon' => 'text-height',
      'autoload' => 'template=admin',
      'installs' => array('InputfieldTinyMCE'),
      'requires' => array('PageGridBlocks'),
      'version' => '0.0.10.2'
    ];
  }

  public function getBlockName() {
    return array(
      'name' => 'pg_editor',
      'label' => 'Rich Text',
    );
  }

  //function to create block
  public function createBlock() {

    //make sure module is available
    if (!$this->modules->isInstalled('InputfieldTinyMCE')) {
      $this->modules->install('InputfieldTinyMCE');
      $this->modules->install('PageFrontEdit');
      $this->modules->refresh();
    }

    //add global settings to InputfieldTinyMCE
    $tinymce = $this->modules->get("InputfieldTinyMCE");

    //set extra css selectors
    if (!$tinymce->styleFormatsCSS) {
      $data = $this->modules->getConfig('InputfieldTinyMCE');
      $data['styleFormatsCSS'] = '#Inline span.span{} #Blocks a.button{}';
      $this->modules->saveConfig('InputfieldTinyMCE', $data);
    }

    //set font picker plugin
    if (!$tinymce->extPluginOpts) {
      $tinymce->addPlugin("/site/modules/PageGridBlocks/tinymce_plugins/iconpicker/iconpicker.js");
    }

    $b = $this->modules->get('PageGridBlocks');
    $blockName = $this->getBlockName()['name'];
    $blockLabel = $this->getBlockName()['label'];
    $blockIcon = $this->getModuleInfo()['icon'];

    $t = $b->createTemplate($blockName, $blockLabel, $blockIcon);
    $f = $b->createField($blockName, 'FieldtypeTextarea', $blockName);
    $f->inputfieldClass = 'InputfieldTinyMCE';
    $f->label = $blockLabel;
    $f->contentType = 1;
    $f->htmlOptions = array(0 => 2);
    $f->inlineMode = 1;
    $f->features = array(0 => 'toolbar', 1 => 'stickybars', 2 => 'spellcheck', 3 => 'purifier', 4 => 'pasteFilter');
    $f->toolbar = 'styles bold italic pwlink blockquote hr bullist numlist table anchor code emoticons iconpicker';
    $f->extPlugins = array(0 => '/site/modules/PageGridBlocks/tinymce_plugins/iconpicker/iconpicker.js');
    $f->save();

    $b->enableInlineEdit($f);
    $b->setPlaceholderText($f, 'Click twice to edit this text');
  }

  public function ___upgrade($fromVersion, $toVersion) {
    $this->createBlock();
  }

  public function ___install() {
    $this->modules->get('PageGridBlocks')->downloadModule('InputfieldTinyMCE');
    $this->createBlock();
  }

  public function ___uninstall() {
    $blockName = $this->getBlockName()['name'];
    $this->modules->get('PageGridBlocks')->removeBlock($blockName);
  }
}
